{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","bridge","send","ad_format","then","data","console","log","result","catch","error","Home","id","fetchedUser","go","title","before","photo_200","src","description","city","first_name","last_name","osName","platform","Persik","props","left","onClick","data-to","IOS","className","persik","alt","App","useState","activePanel","setActivePanel","setUser","size","popout","setPopout","useEffect","a","user","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"6EAAAA,EAAOC,QAAU,IAA0B,oC,ulBCY3CC,IAAOC,KAAK,wBAAyB,CAACC,UAAU,cAC/CC,MAAK,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,EAAKG,WAC9BC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,MAE5B,IA8BeC,EA9BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAQC,GAAX,EAAOC,GAAP,EAAWD,aAAX,OACZ,kBAAC,IAAD,CAAOD,GAAIA,GACV,kBAAC,IAAD,gBACCC,GACD,kBAAC,IAAD,CAAOE,MAAM,oCACZ,kBAAC,IAAD,CACCC,OAAQH,EAAYI,UAAY,kBAAC,IAAD,CAAQC,IAAKL,EAAYI,YAAe,KACxEE,YAAaN,EAAYO,MAAQP,EAAYO,KAAKL,MAAQF,EAAYO,KAAKL,MAAQ,IAFpF,UAIKF,EAAYQ,WAJjB,YAI+BR,EAAYS,e,gFCbxCC,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOd,GAAIc,EAAMd,IAChB,kBAAC,IAAD,CACCe,KAAM,kBAAC,IAAD,CAAmBC,QAASF,EAAMZ,GAAIe,UAAQ,QAClDN,IAAWO,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAASb,IAAKc,IAAQC,IAAI,qBCmB5BC,EAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVtB,EAFU,KAEGyB,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAeI,KAAK,WAHxC,mBAGVC,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoB1C,IAAOC,KAAK,uBADhC,OACO0C,EADP,OAECN,EAAQM,GACRH,EAAU,MAHX,4CARe,sBACfxC,IAAO4C,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAM1C,EAAY,EAAZA,KACnC,GAAa,yBAAT0C,EAAiC,CACpC,IAAMC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQ9C,EAAK+C,OAAS/C,EAAK+C,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAM1C,EAAK,SAAA2C,GACVpB,EAAeoB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAMxB,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAM5B,GAAG,OAAOC,YAAaA,EAAaC,GAAIA,IAC9C,kBAAC,EAAD,CAAQF,GAAG,SAASE,GAAIA,MC7B3Bb,IAAOC,KAAK,gBAEZ2D,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.3b061345.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","/* global VK */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport bridge from '@vkontakte/vk-bridge';\n\nbridge.send(\"VKWebAppShowNativeAds\", {ad_format:\"preloader\"})\n.then(data => console.log(data.result))\n.catch(error => console.log(error));\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}